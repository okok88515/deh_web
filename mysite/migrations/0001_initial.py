# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2022-01-03 15:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aoi',
            fields=[
                ('aoi_id', models.IntegerField(db_column='AOI_id', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('area_name_en', models.CharField(max_length=50)),
                ('upload_time', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('owner', models.CharField(blank=True, max_length=50, null=True)),
                ('coverage', models.FloatField(blank=True, default=0, null=True)),
                ('no_pois', models.SmallIntegerField(default=0)),
                ('open', models.BooleanField(default=True)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('verification', models.IntegerField(default=0)),
                ('contributor', models.CharField(blank=True, max_length=50, null=True)),
                ('language', models.CharField(blank=True, default='中文', max_length=50, null=True)),
                ('transportation', models.CharField(blank=True, choices=[('開車', '開車'), ('騎腳踏車', '騎腳踏車'), ('走路', '走路')], default='開車', max_length=30, null=True)),
                ('is_draft', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'AOI',
            },
        ),
        migrations.CreateModel(
            name='AoiPois',
            fields=[
                ('ids', models.IntegerField(primary_key=True, serialize=False)),
                ('poi_title', models.CharField(db_column='POI_title', max_length=100)),
                ('context_title', models.CharField(blank=True, db_column='Context_title', max_length=50, null=True)),
                ('context_content', models.CharField(blank=True, db_column='Context_content', max_length=400, null=True)),
                ('context_picture', models.CharField(blank=True, db_column='Context_picture', max_length=50, null=True)),
                ('aoi_id_fk', models.ForeignKey(db_column='AOI_id_fk', on_delete=django.db.models.deletion.CASCADE, to='mysite.Aoi')),
            ],
            options={
                'db_table': 'AOI_POIs',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('area_id', models.FloatField(default=0, primary_key=True, serialize=False)),
                ('area_country', models.CharField(blank=True, max_length=255, null=True)),
                ('area_name_ch', models.CharField(blank=True, max_length=255, null=True)),
                ('area_name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('area_count', models.FloatField(blank=True, null=True)),
                ('f6', models.CharField(blank=True, db_column='F6', max_length=255, null=True)),
                ('f7', models.CharField(blank=True, db_column='F7', max_length=255, null=True)),
                ('f8', models.CharField(blank=True, db_column='F8', max_length=255, null=True)),
                ('area_country_en', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'area',
            },
        ),
        migrations.CreateModel(
            name='Area00',
            fields=[
                ('area_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('area_country', models.CharField(blank=True, max_length=50, null=True)),
                ('area_type', models.CharField(blank=True, max_length=50, null=True)),
                ('area_name_en', models.CharField(max_length=50)),
                ('area_name_ch', models.CharField(max_length=50)),
                ('area_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('area_city', models.CharField(blank=True, max_length=50, null=True)),
                ('area_coordinate', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'area00',
            },
        ),
        migrations.CreateModel(
            name='Area2',
            fields=[
                ('area_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('area_country', models.CharField(max_length=50)),
                ('area_name_ch', models.CharField(max_length=50)),
                ('area_name_en', models.CharField(max_length=50)),
                ('area_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'area2',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('chapterid', models.CharField(db_column='chapterId', max_length=50, primary_key=True, serialize=False)),
                ('poiid', models.CharField(blank=True, db_column='POIId', max_length=50, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('chaptertitle', models.CharField(blank=True, db_column='chapterTitle', max_length=100, null=True)),
                ('chapterdescription', models.CharField(blank=True, db_column='chapterDescription', max_length=500, null=True)),
                ('posttime', models.DateTimeField(blank=True, db_column='postTime', null=True)),
            ],
            options={
                'db_table': 'chapter',
            },
        ),
        migrations.CreateModel(
            name='CoiPoint',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('types', models.CharField(blank=True, max_length=50, null=True)),
                ('point_id', models.IntegerField(default=0)),
                ('coi_name', models.CharField(blank=True, max_length=50, null=True)),
                ('verification', models.IntegerField(default=0)),
                ('feedback_mes', models.TextField(blank=True, default='驗證未通過')),
            ],
            options={
                'db_table': 'CoiPoint',
            },
        ),
        migrations.CreateModel(
            name='CoiUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('coi_name', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'CoiUser',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.IntegerField(primary_key=True, serialize=False)),
                ('area_country', models.CharField(max_length=50)),
                ('area_country_en', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='DailyXoi',
            fields=[
                ('xoi_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sequence', models.SmallIntegerField()),
                ('xoi_type', models.IntegerField()),
            ],
            options={
                'db_table': 'daily_xoi',
            },
        ),
        migrations.CreateModel(
            name='DocentArea',
            fields=[
                ('fk_userid', models.IntegerField(primary_key=True, serialize=False)),
                ('area_name_en', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'docent_area',
            },
        ),
        migrations.CreateModel(
            name='Dublincore',
            fields=[
                ('poi_id', models.IntegerField(db_column='POI_id', primary_key=True, serialize=False)),
                ('poi_name', models.CharField(blank=True, db_column='POI_name', max_length=100, null=True)),
                ('poi_name_old', models.CharField(blank=True, db_column='POI_name_old', max_length=50, null=True)),
                ('poi_title', models.CharField(db_column='POI_title', max_length=100)),
                ('subject', models.CharField(max_length=150, null=True)),
                ('parent_id', models.CharField(blank=True, max_length=50, null=True)),
                ('area_name_en', models.CharField(blank=True, max_length=50, null=True)),
                ('type1', models.CharField(blank=True, max_length=50, null=True)),
                ('type2', models.CharField(blank=True, max_length=50, null=True)),
                ('keyword1', models.CharField(max_length=150)),
                ('keyword2', models.CharField(blank=True, max_length=150, null=True)),
                ('keyword3', models.CharField(blank=True, max_length=150, null=True)),
                ('keyword4', models.CharField(blank=True, max_length=150, null=True)),
                ('keyword5', models.CharField(blank=True, max_length=150, null=True)),
                ('relation1', models.CharField(blank=True, max_length=50, null=True)),
                ('relation2', models.CharField(blank=True, max_length=50, null=True)),
                ('relation3', models.CharField(blank=True, max_length=50, null=True)),
                ('relation4', models.CharField(blank=True, max_length=50, null=True)),
                ('relation5', models.CharField(blank=True, max_length=50, null=True)),
                ('period', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.CharField(blank=True, max_length=50, null=True)),
                ('poi_address', models.CharField(db_column='POI_address', max_length=250)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('height', models.IntegerField(blank=True, default=0, null=True)),
                ('scope', models.IntegerField(default=30)),
                ('poi_description_1', models.TextField(db_column='POI_description_1')),
                ('poi_description_2', models.TextField(blank=True, db_column='POI_description_2', default='')),
                ('descriptioneng', models.TextField(blank=True, db_column='descriptionEng', null=True)),
                ('poi_source', models.CharField(blank=True, db_column='POI_source', max_length=600, null=True)),
                ('language', models.CharField(max_length=50)),
                ('format', models.CharField(max_length=50)),
                ('creator', models.CharField(blank=True, max_length=50, null=True)),
                ('publisher', models.CharField(blank=True, max_length=50, null=True)),
                ('contributor', models.CharField(blank=True, max_length=100, null=True)),
                ('rights', models.CharField(blank=True, max_length=50, null=True)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('pa_description', models.CharField(blank=True, max_length=300, null=True)),
                ('pa_embedcode', models.CharField(blank=True, max_length=50, null=True)),
                ('poi_fk', models.IntegerField(blank=True, db_column='POI_FK', null=True)),
                ('verification', models.IntegerField(default=0, null=True)),
                ('open', models.BooleanField(default=True)),
                ('poi_added_time', models.DateTimeField(blank=True, db_column='POI_added_time', null=True)),
                ('bk_rights', models.CharField(blank=True, max_length=50, null=True)),
                ('orig_poi', models.IntegerField(blank=True, null=True)),
                ('media', models.CharField(blank=True, max_length=200, null=True)),
                ('sub_identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('is_draft', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'dublincore',
            },
        ),
        migrations.CreateModel(
            name='EventATT',
            fields=[
                ('ATT_id', models.AutoField(primary_key=True, serialize=False)),
                ('ATT_url', models.FileField(upload_to='chest_media/')),
                ('ATT_upload_time', models.DateTimeField()),
                ('ATT_format', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'EventATT',
            },
        ),
        migrations.CreateModel(
            name='EventATTHistory',
            fields=[
                ('ATT_id', models.AutoField(primary_key=True, serialize=False)),
                ('ATT_url', models.FileField(upload_to='chest_media/')),
                ('ATT_upload_time', models.DateTimeField()),
                ('ATT_format', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'EventATTHistory',
            },
        ),
        migrations.CreateModel(
            name='EventATTRecord',
            fields=[
                ('ATT_id', models.AutoField(primary_key=True, serialize=False)),
                ('ATT_url', models.FileField(upload_to='record_media/')),
                ('ATT_upload_time', models.DateTimeField()),
                ('ATT_format', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'EventATTRecord',
            },
        ),
        migrations.CreateModel(
            name='EventChestHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('src_id', models.IntegerField(blank=True, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('num', models.IntegerField(blank=True, null=True)),
                ('remain', models.IntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('question_type', models.IntegerField()),
                ('question', models.CharField(blank=True, max_length=500, null=True)),
                ('option1', models.CharField(blank=True, max_length=500, null=True)),
                ('option2', models.CharField(blank=True, max_length=500, null=True)),
                ('option3', models.CharField(blank=True, max_length=500, null=True)),
                ('option4', models.CharField(blank=True, max_length=500, null=True)),
                ('hint1', models.CharField(blank=True, max_length=500, null=True)),
                ('hint2', models.CharField(blank=True, max_length=500, null=True)),
                ('hint3', models.CharField(blank=True, max_length=500, null=True)),
                ('hint4', models.CharField(blank=True, max_length=500, null=True)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'EventChestHistory',
            },
        ),
        migrations.CreateModel(
            name='EventChestSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('num', models.IntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('question_type', models.IntegerField()),
                ('question', models.CharField(blank=True, max_length=500, null=True)),
                ('option1', models.CharField(blank=True, max_length=500, null=True)),
                ('option2', models.CharField(blank=True, max_length=500, null=True)),
                ('option3', models.CharField(blank=True, max_length=500, null=True)),
                ('option4', models.CharField(blank=True, max_length=500, null=True)),
                ('hint1', models.CharField(blank=True, max_length=500, null=True)),
                ('hint2', models.CharField(blank=True, max_length=500, null=True)),
                ('hint3', models.CharField(blank=True, max_length=500, null=True)),
                ('hint4', models.CharField(blank=True, max_length=500, null=True)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
                ('poi_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mysite.Dublincore')),
            ],
            options={
                'db_table': 'EventChestSetting',
            },
        ),
        migrations.CreateModel(
            name='EventHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('play_time', models.IntegerField()),
                ('state', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'EventHistory',
            },
        ),
        migrations.CreateModel(
            name='EventRecordHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
                ('answer_time', models.DateTimeField()),
                ('correctness', models.NullBooleanField()),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('point', models.IntegerField(blank=True, null=True)),
                ('chest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventChestHistory')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventHistory')),
            ],
            options={
                'db_table': 'EventRecordHistory',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('Event_id', models.IntegerField(primary_key=True, serialize=False)),
                ('Event_name', models.CharField(blank=True, max_length=50, null=True)),
                ('Event_leader_id', models.IntegerField(blank=True, null=True)),
                ('Event_info', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('verification', models.IntegerField(default=0)),
                ('open', models.BooleanField(default=True)),
                ('coi_name', models.CharField(default='deh', max_length=50, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Events',
            },
        ),
        migrations.CreateModel(
            name='EventSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=500)),
                ('auto_start', models.BooleanField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('play_time', models.IntegerField()),
                ('is_playing', models.IntegerField(default=0)),
                ('game_prize_detail', models.CharField(max_length=2000, null=True)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.Events')),
            ],
            options={
                'db_table': 'EventSetting',
            },
        ),
        migrations.CreateModel(
            name='EventsGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Events')),
            ],
            options={
                'db_table': 'EventsGroup',
            },
        ),
        migrations.CreateModel(
            name='EventsMember',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('found_question', models.BooleanField(default=False)),
                ('evaluate_question', models.BooleanField(default=False)),
                ('enable_activity', models.BooleanField(default=False)),
                ('event_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Events')),
            ],
            options={
                'db_table': 'EventsMember',
            },
        ),
        migrations.CreateModel(
            name='EventsMessage',
            fields=[
                ('message_id', models.IntegerField(primary_key=True, serialize=False)),
                ('is_read', models.BooleanField(default=True)),
                ('message_type', models.IntegerField(default=0)),
                ('Event_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Events')),
            ],
            options={
                'db_table': 'EventsMessage',
            },
        ),
        migrations.CreateModel(
            name='GameATT',
            fields=[
                ('ATT_id', models.AutoField(primary_key=True, serialize=False)),
                ('ATT_url', models.FileField(upload_to='chest_media/')),
                ('ATT_upload_time', models.DateTimeField()),
                ('ATT_format', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'GameATT',
            },
        ),
        migrations.CreateModel(
            name='GameATTHistory',
            fields=[
                ('ATT_id', models.AutoField(primary_key=True, serialize=False)),
                ('ATT_url', models.FileField(upload_to='chest_media/')),
                ('ATT_upload_time', models.DateTimeField()),
                ('ATT_format', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'GameATTHistory',
            },
        ),
        migrations.CreateModel(
            name='GameATTRecord',
            fields=[
                ('ATT_id', models.AutoField(primary_key=True, serialize=False)),
                ('ATT_url', models.FileField(upload_to='record_media/')),
                ('ATT_upload_time', models.DateTimeField()),
                ('ATT_format', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'GameATTRecord',
            },
        ),
        migrations.CreateModel(
            name='GameChestHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('src_id', models.IntegerField(blank=True, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('num', models.IntegerField(blank=True, null=True)),
                ('remain', models.IntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('question_type', models.IntegerField()),
                ('question', models.CharField(blank=True, max_length=500, null=True)),
                ('option1', models.CharField(blank=True, max_length=500, null=True)),
                ('option2', models.CharField(blank=True, max_length=500, null=True)),
                ('option3', models.CharField(blank=True, max_length=500, null=True)),
                ('option4', models.CharField(blank=True, max_length=500, null=True)),
                ('hint1', models.CharField(blank=True, max_length=500, null=True)),
                ('hint2', models.CharField(blank=True, max_length=500, null=True)),
                ('hint3', models.CharField(blank=True, max_length=500, null=True)),
                ('hint4', models.CharField(blank=True, max_length=500, null=True)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'GameChestHistory',
            },
        ),
        migrations.CreateModel(
            name='GameChestSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('num', models.IntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('question_type', models.IntegerField()),
                ('question', models.CharField(blank=True, max_length=500, null=True)),
                ('option1', models.CharField(blank=True, max_length=500, null=True)),
                ('option2', models.CharField(blank=True, max_length=500, null=True)),
                ('option3', models.CharField(blank=True, max_length=500, null=True)),
                ('option4', models.CharField(blank=True, max_length=500, null=True)),
                ('hint1', models.CharField(blank=True, max_length=500, null=True)),
                ('hint2', models.CharField(blank=True, max_length=500, null=True)),
                ('hint3', models.CharField(blank=True, max_length=500, null=True)),
                ('hint4', models.CharField(blank=True, max_length=500, null=True)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
                ('poi_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mysite.Dublincore')),
            ],
            options={
                'db_table': 'GameChestSetting',
            },
        ),
        migrations.CreateModel(
            name='GameHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('play_time', models.IntegerField()),
                ('state', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'GameHistory',
            },
        ),
        migrations.CreateModel(
            name='GameRecordHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer', models.CharField(blank=True, max_length=500, null=True)),
                ('answer_time', models.DateTimeField()),
                ('correctness', models.NullBooleanField()),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('point', models.IntegerField(blank=True, null=True)),
                ('chest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameChestHistory')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameHistory')),
            ],
            options={
                'db_table': 'GameRecordHistory',
            },
        ),
        migrations.CreateModel(
            name='GameSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=500)),
                ('auto_start', models.BooleanField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('play_time', models.IntegerField()),
                ('is_playing', models.IntegerField(default=0)),
                ('game_prize_detail', models.CharField(max_length=2000, null=True)),
            ],
            options={
                'db_table': 'GameSetting',
            },
        ),
        migrations.CreateModel(
            name='GroupAuthorized',
            fields=[
                ('authorized_id', models.IntegerField(primary_key=True, serialize=False)),
                ('revise', models.BooleanField(default=False)),
                ('verify', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'GroupAuthorized',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('group_id', models.IntegerField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, max_length=50, null=True)),
                ('group_leader_id', models.IntegerField(blank=True, null=True)),
                ('group_info', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('verification', models.IntegerField(default=0)),
                ('open', models.BooleanField(default=True)),
                ('coi_name', models.CharField(default='deh', max_length=50, null=True)),
                ('manage_start_time', models.DateTimeField(blank=True, null=True)),
                ('manage_end_time', models.DateTimeField(blank=True, null=True)),
                ('manage', models.BooleanField(default=False)),
                ('open_origin', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='GroupsMember',
            fields=[
                ('member_id', models.IntegerField(primary_key=True, serialize=False)),
                ('join_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('revise', models.BooleanField(default=False)),
                ('verify', models.BooleanField(default=False)),
                ('test', models.BooleanField(default=False)),
                ('foreignkey', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Groups')),
            ],
            options={
                'db_table': 'GroupsMember',
            },
        ),
        migrations.CreateModel(
            name='GroupsMessage',
            fields=[
                ('message_id', models.IntegerField(primary_key=True, serialize=False)),
                ('is_read', models.BooleanField(default=True)),
                ('message_type', models.IntegerField(default=0)),
                ('group_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Groups')),
            ],
            options={
                'db_table': 'GroupsMessage',
            },
        ),
        migrations.CreateModel(
            name='GroupsPoint',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('types', models.CharField(blank=True, max_length=50, null=True)),
                ('point_id', models.IntegerField(default=0)),
                ('foreignkey', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Groups')),
            ],
            options={
                'db_table': 'GroupsPoint',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=50)),
                ('dt', models.DateTimeField(blank=True, null=True)),
                ('page', models.CharField(blank=True, max_length=255, null=True)),
                ('pre_page', models.CharField(blank=True, max_length=255, null=True)),
                ('dveviceid', models.CharField(blank=True, db_column='dveviceID', max_length=50, null=True)),
                ('appver', models.CharField(blank=True, db_column='appVer', max_length=10, null=True)),
                ('ulatitude', models.FloatField(blank=True, null=True)),
                ('ulongitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='Mpeg',
            fields=[
                ('picture_id', models.IntegerField(primary_key=True, serialize=False)),
                ('picture_name', models.CharField(max_length=50)),
                ('picture_type', models.CharField(max_length=50)),
                ('picture_url', models.FileField(upload_to='../player_pictures/')),
                ('picture_size', models.IntegerField()),
                ('picture_upload_user', models.CharField(blank=True, max_length=50, null=True)),
                ('picture_source', models.CharField(blank=True, max_length=50, null=True)),
                ('picture_rights', models.CharField(blank=True, max_length=50, null=True)),
                ('picture_upload_time', models.DateTimeField()),
                ('format', models.SmallIntegerField()),
                ('foreignkey', models.ForeignKey(db_column='foreignKey', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='poi', to='mysite.Dublincore')),
            ],
            options={
                'db_table': 'mpeg',
            },
        ),
        migrations.CreateModel(
            name='prize_profile',
            fields=[
                ('prize_id', models.AutoField(primary_key=True, serialize=False)),
                ('prize_name', models.CharField(blank=True, max_length=400, null=True)),
                ('prize_description', models.CharField(blank=True, max_length=400, null=True)),
                ('prize_url', models.FileField(upload_to='../player_pictures/prize/')),
                ('prize_number', models.IntegerField()),
                ('upload_time', models.DateTimeField()),
                ('is_open', models.IntegerField()),
                ('is_allocated', models.IntegerField()),
                ('group_id', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'prize_profile',
            },
        ),
        migrations.CreateModel(
            name='prize_to_player',
            fields=[
                ('PTP_id', models.AutoField(primary_key=True, serialize=False)),
                ('player_prize_id', models.IntegerField(null=True)),
                ('prize_amount', models.IntegerField(null=True)),
                ('start_time', models.CharField(blank=True, max_length=400, null=True)),
                ('end_time', models.CharField(blank=True, max_length=400, null=True)),
                ('play_time', models.CharField(blank=True, max_length=400, null=True)),
                ('is_exchanged', models.IntegerField(default=0)),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameSetting')),
            ],
            options={
                'db_table': 'prize_to_player',
            },
        ),
        migrations.CreateModel(
            name='RoutePlanning',
            fields=[
                ('route_id', models.IntegerField(primary_key=True, serialize=False)),
                ('route_title', models.CharField(max_length=50)),
                ('area_name_en', models.CharField(max_length=50)),
                ('route_upload_time', models.DateTimeField()),
                ('route_description', models.CharField(blank=True, max_length=800, null=True)),
                ('route_owner', models.CharField(blank=True, max_length=50, null=True)),
                ('coverage', models.FloatField(default=0)),
                ('duration', models.IntegerField(default=0)),
                ('transportation', models.CharField(blank=True, choices=[('開車', '開車'), ('騎腳踏車', '騎腳踏車'), ('走路', '走路')], max_length=50, null=True)),
                ('publish', models.CharField(blank=True, max_length=10, null=True)),
                ('open', models.BooleanField(default=True)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('verification', models.IntegerField(default=0)),
                ('contributor', models.CharField(blank=True, max_length=50, null=True)),
                ('language', models.CharField(blank=True, default='中文', max_length=50, null=True)),
                ('is_draft', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'route_planning',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('sequence_id', models.IntegerField(primary_key=True, serialize=False)),
                ('poi_title', models.CharField(db_column='POI_title', max_length=100)),
                ('sequence', models.IntegerField()),
                ('stay_time', models.IntegerField(default=0)),
                ('next_time', models.IntegerField(blank=True, default=0, null=True)),
                ('next_distance', models.FloatField(blank=True, default=0, null=True)),
                ('context_title', models.CharField(blank=True, db_column='Context_title', max_length=50, null=True)),
                ('context_content', models.CharField(blank=True, db_column='Context_content', max_length=400, null=True)),
                ('context_picture', models.CharField(blank=True, db_column='Context_picture', max_length=50, null=True)),
                ('foreignkey', models.ForeignKey(db_column='foreignKey', on_delete=django.db.models.deletion.CASCADE, related_name='loi', to='mysite.RoutePlanning')),
                ('poi_id', models.ForeignKey(blank=True, db_column='POI_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pois', to='mysite.Dublincore')),
            ],
            options={
                'db_table': 'sequence',
            },
        ),
        migrations.CreateModel(
            name='SoiStory',
            fields=[
                ('soi_id', models.IntegerField(db_column='SOI_id', primary_key=True, serialize=False)),
                ('soi_title', models.CharField(db_column='SOI_title', max_length=50)),
                ('area_name_en', models.CharField(max_length=50)),
                ('soi_upload_time', models.DateTimeField(db_column='SOI_upload_time')),
                ('soi_description', models.TextField(db_column='SOI_description')),
                ('soi_user_name', models.CharField(db_column='SOI_user_name', max_length=50)),
                ('transportation', models.CharField(default='走路', max_length=50)),
                ('open', models.BooleanField(default=True)),
                ('identifier', models.CharField(max_length=50)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('verification', models.IntegerField(default=0)),
                ('contributor', models.CharField(blank=True, max_length=50, null=True)),
                ('is_draft', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'SOI_story',
            },
        ),
        migrations.CreateModel(
            name='SoiStoryXoi',
            fields=[
                ('soi_xois_id', models.IntegerField(db_column='SOI_XOIs_id', primary_key=True, serialize=False)),
                ('aoi_id', models.ForeignKey(db_column='AOI_id', default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Aoi')),
                ('loi_id', models.ForeignKey(db_column='LOI_id', default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.RoutePlanning')),
                ('poi_id', models.ForeignKey(db_column='POI_id', default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Dublincore')),
                ('soi_id_fk', models.ForeignKey(db_column='SOI_id_fk', on_delete=django.db.models.deletion.CASCADE, to='mysite.SoiStory')),
            ],
            options={
                'db_table': 'SOI_story_xoi',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(default='', max_length=50, unique=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.IntegerField(blank=True, choices=[(1, '男'), (0, '女')], null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('ishiddenemail', models.SmallIntegerField(blank=True, db_column='isHiddenEmail', null=True)),
                ('homepage', models.CharField(blank=True, db_column='homePage', default='無', max_length=100, null=True)),
                ('regtime', models.DateTimeField(blank=True, db_column='regTime', default=django.utils.timezone.now, null=True)),
                ('regip', models.CharField(blank=True, db_column='regIp', max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('user', '玩家'), ('docent', '解說員')], max_length=50, null=True)),
                ('postlogs', models.IntegerField(blank=True, db_column='postLogs', null=True)),
                ('postcomms', models.IntegerField(blank=True, db_column='postComms', null=True)),
                ('postmessages', models.IntegerField(blank=True, db_column='postMessages', null=True)),
                ('lastvisittime', models.DateTimeField(blank=True, db_column='lastVisitTime', default=django.utils.timezone.now, null=True)),
                ('lastvisitip', models.CharField(blank=True, db_column='lastVisitIP', max_length=50, null=True)),
                ('hashkey', models.CharField(blank=True, db_column='hashKey', max_length=50, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('user_address', models.CharField(blank=True, max_length=255, null=True)),
                ('education', models.CharField(blank=True, choices=[('高中', '高中'), ('大學', '大學'), ('博士', '博士'), ('碩士', '碩士'), ('其它', '其它')], max_length=50, null=True)),
                ('career', models.CharField(blank=True, choices=[('農漁牧', '農漁牧'), ('政府機關', '政府機關'), ('軍警', '軍警'), ('教育/研究', '教育/研究'), ('經商', '經商'), ('建築/營造', '建築/營造'), ('製造/供應商', '製造/供應商'), ('金融/保險', '金融/保險'), ('房地產', '房地產'), ('資訊', '資訊'), ('服務', '服務'), ('學生', '學生'), ('家管', '家管'), ('醫療', '醫療'), ('法律相關行業', '法律相關行業'), ('流通/零售', '流通/零售'), ('交通/運輸/旅遊', '交通/運輸/旅遊'), ('娛樂/出版', '娛樂/出版'), ('傳播/行銷', '傳播/行銷'), ('藝術', '藝術'), ('待業中', '待業中'), ('其它', '其它')], max_length=50, null=True)),
                ('income', models.IntegerField(blank=True, default=10000, null=True)),
                ('interest', models.CharField(blank=True, max_length=150, null=True)),
                ('coordinate', models.CharField(blank=True, max_length=50, null=True)),
                ('coor_timestamp', models.DateTimeField(blank=True, null=True)),
                ('account_state', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('bk_role', models.CharField(blank=True, max_length=50, null=True)),
                ('is_prizeadder', models.IntegerField(default=0, null=True)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='DocentProfile',
            fields=[
                ('fk_userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mysite.UserProfile')),
                ('name', models.CharField(max_length=50)),
                ('telphone', models.CharField(blank=True, max_length=20, null=True)),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True)),
                ('docent_language', models.CharField(blank=True, max_length=100, null=True)),
                ('charge', models.CharField(blank=True, max_length=50, null=True)),
                ('photography', models.CharField(blank=True, max_length=255, null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('social_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'docent_profile',
            },
        ),
        migrations.AddField(
            model_name='prize_to_player',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='prize_profile',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='groupsmessage',
            name='receiver',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='groupsmessage',
            name='sender',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='groupsmember',
            name='user_id',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='gamesetting',
            name='group_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.Groups'),
        ),
        migrations.AddField(
            model_name='gamerecordhistory',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='gamehistory',
            name='room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameSetting'),
        ),
        migrations.AddField(
            model_name='gamechestsetting',
            name='room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameSetting'),
        ),
        migrations.AddField(
            model_name='gamechesthistory',
            name='game_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameHistory'),
        ),
        migrations.AddField(
            model_name='gamechesthistory',
            name='poi_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mysite.Dublincore'),
        ),
        migrations.AddField(
            model_name='gameattrecord',
            name='record_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameRecordHistory'),
        ),
        migrations.AddField(
            model_name='gameatthistory',
            name='chest_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameChestHistory'),
        ),
        migrations.AddField(
            model_name='gameatt',
            name='chest_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.GameChestSetting'),
        ),
        migrations.AddField(
            model_name='eventsmessage',
            name='receiver',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='events_receiver', to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='eventsmessage',
            name='sender',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='events_sender', to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='eventsmember',
            name='user_id',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='eventsgroup',
            name='group_id',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='mysite.Groups'),
        ),
        migrations.AddField(
            model_name='eventrecordhistory',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='eventhistory',
            name='room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventSetting'),
        ),
        migrations.AddField(
            model_name='eventchestsetting',
            name='room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventSetting'),
        ),
        migrations.AddField(
            model_name='eventchesthistory',
            name='game_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventHistory'),
        ),
        migrations.AddField(
            model_name='eventchesthistory',
            name='poi_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mysite.Dublincore'),
        ),
        migrations.AddField(
            model_name='eventattrecord',
            name='record_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventRecordHistory'),
        ),
        migrations.AddField(
            model_name='eventatthistory',
            name='chest_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventChestHistory'),
        ),
        migrations.AddField(
            model_name='eventatt',
            name='chest_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.EventChestSetting'),
        ),
        migrations.AddField(
            model_name='coiuser',
            name='user_fk',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='user_fk', to='mysite.UserProfile'),
        ),
        migrations.AddField(
            model_name='aoipois',
            name='poi_id',
            field=models.ForeignKey(blank=True, db_column='POI_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='mysite.Dublincore'),
        ),
        migrations.AlterUniqueTogether(
            name='gamerecordhistory',
            unique_together=set([('user_id', 'game_id', 'chest_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventrecordhistory',
            unique_together=set([('user_id', 'game_id', 'chest_id')]),
        ),
    ]
